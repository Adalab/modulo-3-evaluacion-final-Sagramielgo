{"version":3,"sources":["components/CharacterCard.js","components/CharacterList.js","components/services/Api.js","components/filters/FilterInput.js","components/filters/FilterSpecies.js","components/filters/Filters.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["CharacterCard","props","className","to","characterInfo","id","replace","src","image","alt","name","specie","planet","CharacterList","charactersList","charactersInfo","map","card","getDataFromApi","fetch","then","response","json","data","results","character","species","location","status","episodes","episode","FilterInput","htmlFor","type","placeholder","onChange","ev","handleFilter","key","value","target","toUpperCase","onClick","handleReset","FilterSpecies","Filters","onSubmit","preventDefault","CharacterDetail","undefined","length","App","useState","setData","setName","setSpecie","useEffect","console","log","filteredCharacters","filter","includes","inputChange","exact","path","render","routerProps","clickedCharacter","parseInt","match","params","foundCharacter","find","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ec229c64.chunk.js","sourcesContent":["import '../stylesSheets/CharacterCard.scss';\r\nimport { Link } from 'react-router-dom';\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <Link className=\"link\" to={`/character/${props.characterInfo.id}`} replace>\r\n      <div className=\"card__container-img\">\r\n        <img\r\n          className=\"card__img\"\r\n          src={props.characterInfo.image}\r\n          alt={`${props.characterInfo.name}'s portrait`}\r\n        />\r\n      </div>\r\n      <div className=\"card__text\">\r\n        <h3 className=\"card__text-title\">{props.characterInfo.name}</h3>\r\n        <p className=\"card__text-paragraph\">{props.characterInfo.specie}</p>\r\n        <p className=\"card__text-paragraph\">{props.characterInfo.planet}</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\nexport default CharacterCard;\r\n","import '../stylesSheets/CharacterList.scss';\r\nimport CharacterCard from './CharacterCard';\r\n\r\nconst CharacterList = (props) => {\r\n  const charactersList = props.charactersInfo.map((card) => {\r\n    return (\r\n      <CharacterCard\r\n        className=\"characterCard\"\r\n        key={card.id}\r\n        characterInfo={card}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <section className=\"app__main\">\r\n      <ul className=\"charactersList\">\r\n        <li className=\"card\">{charactersList}</li>\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","const getDataFromApi = () => {\r\n  return fetch('//rickandmortyapi.com/api/character/')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          image: character.image,\r\n          name: character.name,\r\n          specie: character.species,\r\n          planet: character.location.name,\r\n          status: character.status,\r\n          episodes: character.episode,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","const FilterInput = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      key: 'name',\r\n      value: ev.target.value.toUpperCase(),\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    props.handleReset();\r\n  };\r\n  return (\r\n    <label className=\"form__label\" htmlFor=\"searchField\">\r\n      <input\r\n        className=\"form__input\"\r\n        type=\"text\"\r\n        name=\"searchField\"\r\n        id=\"searchField\"\r\n        placeholder=\"write a character name\"\r\n        onChange={handleChange}\r\n      ></input>\r\n      <span className=\"icon iconInput fas fa-undo\" onClick={handleReset}></span>\r\n    </label>\r\n  );\r\n};\r\nexport default FilterInput;\r\n","const FilterSpecies = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      key: 'specie',\r\n      value: ev.target.value,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label>Species:</label>\r\n      <select\r\n        className=\"form__input-text\"\r\n        name=\"specie\"\r\n        id=\"specie\"\r\n        onChange={handleChange}\r\n      >\r\n        <option value=\"all\">All</option>\r\n        <option value=\"Alien\">Alien</option>\r\n        <option value=\"Human\">Human</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\nexport default FilterSpecies;\r\n","import FilterInput from './FilterInput';\r\nimport FilterSpecies from './FilterSpecies';\r\n\r\nconst Filters = (props) => {\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <section>\r\n      <form onSubmit={handleSubmit}>\r\n        <h1> en marcha!</h1>\r\n        <FilterInput\r\n          handleFilter={props.handleFilter}\r\n          handleReset={props.handleReset}\r\n        />\r\n        <FilterSpecies handleFilter={props.handleFilter} />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\nexport default Filters;\r\n","import React from 'react';\r\n/* import PropTypes from 'prop-types'; */\r\nimport '../stylesSheets/CharacterDetail.scss';\r\nimport { Link } from 'react-router-dom';\r\n/* import image from '../images/meeseeks.png'; */\r\n\r\nconst CharacterDetail = (props) => {\r\n  if (props.characterInfo === undefined) {\r\n    return (\r\n      <div className=\"modal\">\r\n        <div className=\"modal__dialog\">\r\n          <div className=\"modal__dialog\">\r\n            <div className=\"modal__content\">\r\n              <header className=\"modal__header\">\r\n                <Link to=\"/\">\r\n                  <span className=\"modal__close icon fas fa-undo\"></span>\r\n                </Link>\r\n              </header>\r\n              <div className=\"modal__text-error\">\r\n                <p>Error: character not found</p>\r\n              </div>\r\n              {/*     <div className=\"modal__img\">\r\n                <img\r\n                  className=\"modal__img-error\"\r\n                  src={image}\r\n                  alt={'Meeseeks worrying face'}\r\n                />\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"modal\">\r\n        <div className=\"modal__dialog\">\r\n          <div className=\"modal__dialog\">\r\n            <div className=\"modal__content\">\r\n              <header className=\"modal__header\">\r\n                <Link to=\"/\">\r\n                  <span className=\"modal__close icon fas fa-undo\"></span>\r\n                </Link>\r\n              </header>\r\n              <div className=\"modal__img\">\r\n                <img\r\n                  className=\"modal__img-src\"\r\n                  src={props.characterInfo.image}\r\n                  alt={`${props.characterInfo.name}'s portrait`}\r\n                />\r\n              </div>\r\n              <div className=\"modal__text\">\r\n                <h2>{props.characterInfo.name}</h2>\r\n                <p>\r\n                  <span className=\"modal__text--property\">Status: </span>\r\n                  <span>{props.characterInfo.status}</span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"modal__text--property\">Species: </span>\r\n                  <span>{props.characterInfo.specie}</span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"modal__text--property\">Origin: </span>\r\n                  <span>{props.characterInfo.planet}</span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"modal__text--property\">Episodes: </span>\r\n                  <span>{props.characterInfo.episodes.length}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default CharacterDetail;\r\n","import '../stylesSheets/App.scss';\nimport CharacterList from './CharacterList';\nimport getDataFromApi from './services/Api';\nimport Filters from './filters/Filters';\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport CharacterDetail from './CharacterDetail';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [name, setName] = useState('');\n  const [specie, setSpecie] = useState('all');\n\n  useEffect(() => {\n    getDataFromApi().then((data) => setData(data));\n  }, []);\n\n  const handleFilter = (inputChange) => {\n    if (inputChange.key === 'name') {\n      setName(inputChange.value);\n    } else if (inputChange.key === 'specie') {\n      setSpecie(inputChange.value);\n    }\n  };\n  console.log(specie);\n\n  const filteredCharacters = data\n    .filter((character) => {\n      return character.name.toUpperCase().includes(name);\n    })\n\n    .filter((character) => {\n      return specie === 'all' ? true : character.specie === specie;\n    });\n\n  const handleReset = () => {\n    console.log('estoy borrando');\n    setData(data);\n    setName('');\n    setSpecie('all');\n  };\n  console.log(name);\n  console.log(filteredCharacters);\n\n  const renderCharacterDetail = (routerProps) => {\n    const clickedCharacter = parseInt(routerProps.match.params.id);\n    const foundCharacter = data.find((character) => {\n      return character.id === clickedCharacter;\n    });\n    return <CharacterDetail characterInfo={foundCharacter} />;\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app__header\">\n        <Filters handleFilter={handleFilter} handleReset={handleReset} />\n      </header>\n      <main className=\"app__main\">\n        <Switch>\n          <Route exact path=\"/\">\n            <CharacterList charactersInfo={filteredCharacters} />\n          </Route>\n          <Route path=\"/character/:id\" render={renderCharacterDetail} />\n        </Switch>\n      </main>\n    </div>\n  );\n};\nexport default App;\n","/* import './stylesSheets/index.scss'; */\nimport App from './components/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}